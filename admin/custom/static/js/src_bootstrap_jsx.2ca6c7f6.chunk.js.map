{"version":3,"file":"static/js/src_bootstrap_jsx.2ca6c7f6.chunk.js","mappings":"sQAoBA,MAAMA,EAAS,CACX,MAAO,CACH,SAAU,GACd,EACA,OAAQ,CACJ,SAAU,GACV,WAAY,MAChB,CACJ,EAEA,MAAMC,UAA+B,eAAc,CAC/C,mBAAoB,CAChB,MAAM,kBAAkB,EAExB,KAAK,MAAM,OAAO,oBAAoB,EACjC,KAAKC,GAAa,CACfA,EAAYA,EACP,OAAOC,GAAS,CArCrC,MAsCwB,UAAAA,GAAA,YAAAA,EAAU,SAAV,cAAkB,WAAYA,EAAS,OAAO,QAAQ,SAAW,QAAUA,EAAS,OAAO,QAAQ,KAAI,EAC1G,IAAIA,IAAa,CACd,GAAIA,EAAS,IAAI,QAAQ,qBAAsB,EAAE,EACjD,OAAQA,EAAS,OAAO,QAAQ,SAAW,OAC3C,SAAUA,EAAS,OAAO,QAC9B,EAAE,EACD,KAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,GAAK,EAAKD,EAAE,GAAKC,EAAE,GAAK,GAAK,CAAE,EAE5D,KAAK,SAAS,CAAC,UAAAH,CAAS,CAAC,CAC7B,CAAC,CACT,CAEA,WAAWI,EAAOC,EAAUC,EAAc,CACtC,GAAK,KAAK,MAAM,UAET,CACH,MAAMC,EAAuB,gBAAc,SAAS,KAAK,MAAM,KAAM,sBAAsB,GAAK,CAAC,EAC3FC,EAAuB,gBAAc,SAAS,KAAK,MAAM,KAAM,mBAAmB,GAAQ,CAAC,EAEjG,OAAO,kBAAC,iBAAc,KAClB,kBAAC,QAAK,CAAC,MAAOV,EAAO,MAAO,KAAK,SAC7B,kBAAC,YAAS,KACN,kBAAC,WAAQ,KACL,kBAAC,YAAS,CAAC,MAAOA,EAAO,QAAS,OAAK,EAAE,sBAAsB,CAAE,EACjE,kBAAC,YAAS,CAAC,MAAOA,EAAO,QAAS,OAAK,EAAE,oBAAoB,CAAE,EAC/D,kBAAC,YAAS,CAAC,MAAOA,EAAO,QAAS,OAAK,EAAE,iBAAiB,CAAE,CAChE,CACJ,EACA,kBAAC,YAAS,KACL,KAAK,MAAM,UAAU,IAAKW,GACvB,kBAAC,WAAQ,CAAC,IAAKA,EAAI,IACf,kBAAC,YAAS,CAAC,UAAU,KAAK,MAAM,OAAOA,EAAI,EAAG,EAC9C,kBAAC,YAAS,KACLA,EAAI,OACD,kBAAC,YAAS,QAASF,EAAqB,SAASE,EAAI,EAAE,EACnD,QAAS,IAAM,CACX,MAAMC,EAAwB,CAAC,GAAGH,CAAoB,EAChDI,EAAMD,EAAsB,QAAQD,EAAI,EAAE,EAC5CE,IAAQ,GACRD,EAAsB,OAAOC,EAAK,CAAC,GAEnCD,EAAsB,KAAKD,EAAI,EAAE,EACjCC,EAAsB,KAAK,GAE/B,KAAK,SAAS,uBAAwBA,CAAqB,CAC/D,EACJ,EACF,IAAK,EACX,kBAAC,YAAS,KACLD,EAAI,SACD,kBAAC,YACG,QAASD,EAAkB,SAASC,EAAI,EAAE,EACzC,QAAS,IAAM,CACX,MAAMG,EAAqB,CAAC,GAAGJ,CAAiB,EAC1CG,EAAMC,EAAmB,QAAQH,EAAI,EAAE,EACzCE,IAAQ,GACRC,EAAmB,OAAOD,EAAK,CAAC,GAEhCC,EAAmB,KAAKH,EAAI,EAAE,EAC9BG,EAAmB,KAAK,GAE5B,KAAK,SAAS,oBAAqBA,CAAkB,CACzD,EACL,EAAK,IACb,CACJ,CACH,CACL,CACJ,CACJ,CACJ,KAxDI,QAAO,IAyDf,CACJ,CAEAb,EAAuB,UAAY,CAC/B,OAAQ,WAAiB,WACzB,UAAW,WACX,UAAW,WACX,MAAO,WACP,KAAM,WAAiB,WACvB,OAAQ,WACR,QAAS,SACT,SAAU,QACd,EAEA,QAAeA,E,eCzHf,SAASc,GAAM,CACX,OAAO,gBAAC,EAAsB,IAAC,CACnC,CAEA,QAAeA,ECFf,aAAoB,SAAS,eAAe,MAAM,CAAC,EAC9C,OAAO,kBAAC,oBACL,kBAAC,EAAG,IAAC,CACT,CAAmB,C,kBCLvB,IAAIC,EAAI,EAAQ,KAAW,EAC3B,GAAI,EACFC,EAAQ,WAAaD,EAAE,WACvBC,EAAQ,YAAcD,EAAE,gBACnB,M","sources":["ConfigCustomEasyAccess.jsx","App.jsx","bootstrap.jsx","../node_modules/react-dom/client.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Checkbox,\r\n}  from '@mui/material';\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric } from '@iobroker/json-config';\r\nimport { I18n } from '@iobroker/adapter-react-v5';\r\n\r\nconst styles = {\r\n    table: {\r\n        minWidth: 400\r\n    },\r\n    header: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n};\r\n\r\nclass ConfigCustomEasyAccess extends ConfigGeneric {\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n\r\n        this.props.socket.getAdapterInstances()\r\n            .then(instances => {\r\n                instances = instances\r\n                    .filter(instance =>\r\n                        instance?.common?.adminUI && (instance.common.adminUI.config !== 'none' || instance.common.adminUI.tab))\r\n                    .map(instance => ({\r\n                        id: instance._id.replace(/^system\\.adapter\\./, ''),\r\n                        config: instance.common.adminUI.config !== 'none',\r\n                        adminTab: instance.common.adminTab\r\n                    }))\r\n                    .sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0));\r\n\r\n                this.setState({instances});\r\n            });\r\n    }\r\n\r\n    renderItem(error, disabled, defaultValue) {\r\n        if (!this.state.instances) {\r\n            return null;\r\n        } else {\r\n            const accessAllowedConfigs = ConfigGeneric.getValue(this.props.data, 'accessAllowedConfigs') || [];\r\n            const accessAllowedTabs    = ConfigGeneric.getValue(this.props.data, 'accessAllowedTabs')    || [];\r\n\r\n            return <TableContainer>\r\n                <Table style={styles.table} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Instance')}</TableCell>\r\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Config')}</TableCell>\r\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Tab')}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.instances.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\r\n                                <TableCell>\r\n                                    {row.config ?\r\n                                        <Checkbox checked={accessAllowedConfigs.includes(row.id)}\r\n                                            onClick={() => {\r\n                                                const _accessAllowedConfigs = [...accessAllowedConfigs];\r\n                                                const pos = _accessAllowedConfigs.indexOf(row.id);\r\n                                                if (pos !== -1) {\r\n                                                    _accessAllowedConfigs.splice(pos, 1);\r\n                                                } else {\r\n                                                    _accessAllowedConfigs.push(row.id);\r\n                                                    _accessAllowedConfigs.sort();\r\n                                                }\r\n                                                this.onChange('accessAllowedConfigs', _accessAllowedConfigs);\r\n                                            }}\r\n                                        />\r\n                                    : null}</TableCell>\r\n                                <TableCell>\r\n                                    {row.adminTab ?\r\n                                        <Checkbox\r\n                                            checked={accessAllowedTabs.includes(row.id)}\r\n                                             onClick={() => {\r\n                                                 const _accessAllowedTabs = [...accessAllowedTabs];\r\n                                                 const pos = _accessAllowedTabs.indexOf(row.id);\r\n                                                 if (pos !== -1) {\r\n                                                     _accessAllowedTabs.splice(pos, 1);\r\n                                                 } else {\r\n                                                     _accessAllowedTabs.push(row.id);\r\n                                                     _accessAllowedTabs.sort();\r\n                                                 }\r\n                                                 this.onChange('accessAllowedTabs', _accessAllowedTabs);\r\n                                             }}\r\n                                        /> : null}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n        }\r\n    }\r\n}\r\n\r\nConfigCustomEasyAccess.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object.isRequired,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default ConfigCustomEasyAccess;\r\n","import ConfigCustomEasyAccess from './ConfigCustomEasyAccess.jsx';\r\n\r\nfunction App() {\r\n    return <ConfigCustomEasyAccess />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nReactDOM.createRoot(document.getElementById('root'))\r\n    .render(<React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>);\r\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["styles","ConfigCustomEasyAccess","instances","instance","a","b","error","disabled","defaultValue","accessAllowedConfigs","accessAllowedTabs","row","_accessAllowedConfigs","pos","_accessAllowedTabs","App","m","exports"],"sourceRoot":""}