{"version":3,"file":"static/js/src_bootstrap_jsx.1b174aa5.chunk.js","mappings":"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","sources":["ConfigCustomEasyAccess.jsx","App.jsx","bootstrap.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Checkbox } from '@mui/material';\n\n// important to make from package and not from some children.\n// invalid\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\n// valid\nimport { ConfigGeneric } from '@iobroker/json-config';\nimport { I18n } from '@iobroker/adapter-react-v5';\n\nconst styles = {\n    table: {\n        minWidth: 400,\n    },\n    header: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n};\n\nclass ConfigCustomEasyAccess extends ConfigGeneric {\n    componentDidMount() {\n        super.componentDidMount();\n\n        this.props.oContext.socket.getAdapterInstances().then(instances => {\n            instances = instances\n                .filter(\n                    instance =>\n                        instance?.common?.adminUI &&\n                        (instance.common.adminUI.config !== 'none' || instance.common.adminUI.tab),\n                )\n                .map(instance => ({\n                    id: instance._id.replace(/^system\\.adapter\\./, ''),\n                    config: instance.common.adminUI.config !== 'none',\n                    adminTab: instance.common.adminTab,\n                }))\n                .sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n\n            this.setState({ instances });\n        });\n    }\n\n    renderItem(error, disabled, defaultValue) {\n        if (!this.state.instances) {\n            return null;\n        }\n        const accessAllowedConfigs = ConfigGeneric.getValue(this.props.data, 'accessAllowedConfigs') || [];\n        const accessAllowedTabs = ConfigGeneric.getValue(this.props.data, 'accessAllowedTabs') || [];\n\n        return (\n            <TableContainer>\n                <Table\n                    style={styles.table}\n                    size=\"small\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Instance')}</TableCell>\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Config')}</TableCell>\n                            <TableCell style={styles.header}>{I18n.t('custom_easy_Tab')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.instances.map(row => (\n                            <TableRow key={row.id}>\n                                <TableCell\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {row.id}\n                                </TableCell>\n                                <TableCell>\n                                    {row.config ? (\n                                        <Checkbox\n                                            checked={accessAllowedConfigs.includes(row.id)}\n                                            onClick={() => {\n                                                const _accessAllowedConfigs = [...accessAllowedConfigs];\n                                                const pos = _accessAllowedConfigs.indexOf(row.id);\n                                                if (pos !== -1) {\n                                                    _accessAllowedConfigs.splice(pos, 1);\n                                                } else {\n                                                    _accessAllowedConfigs.push(row.id);\n                                                    _accessAllowedConfigs.sort();\n                                                }\n                                                this.onChange('accessAllowedConfigs', _accessAllowedConfigs);\n                                            }}\n                                        />\n                                    ) : null}\n                                </TableCell>\n                                <TableCell>\n                                    {row.adminTab ? (\n                                        <Checkbox\n                                            checked={accessAllowedTabs.includes(row.id)}\n                                            onClick={() => {\n                                                const _accessAllowedTabs = [...accessAllowedTabs];\n                                                const pos = _accessAllowedTabs.indexOf(row.id);\n                                                if (pos !== -1) {\n                                                    _accessAllowedTabs.splice(pos, 1);\n                                                } else {\n                                                    _accessAllowedTabs.push(row.id);\n                                                    _accessAllowedTabs.sort();\n                                                }\n                                                this.onChange('accessAllowedTabs', _accessAllowedTabs);\n                                            }}\n                                        />\n                                    ) : null}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    }\n}\n\nConfigCustomEasyAccess.propTypes = {\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n    themeName: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    schema: PropTypes.object,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default ConfigCustomEasyAccess;\n","import ConfigCustomEasyAccess from './ConfigCustomEasyAccess.jsx';\n\nfunction App() {\n    return <ConfigCustomEasyAccess />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n);\n"],"names":["styles","ConfigCustomEasyAccess","instances","instance","a","b","error","disabled","defaultValue","accessAllowedConfigs","accessAllowedTabs","row","_accessAllowedConfigs","pos","_accessAllowedTabs","App"],"sourceRoot":""}